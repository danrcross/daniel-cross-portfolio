{"ast":null,"code":"import * as o from \"react\";\nimport a from \"classnames\";\nimport { Slot as l } from \"@radix-ui/react-slot\";\nimport { extractProps as f } from \"../helpers/extract-props.js\";\nimport { marginPropDefs as d } from \"../props/margin.props.js\";\nimport { skeletonPropDefs as P } from \"./skeleton.props.js\";\nconst t = o.forwardRef((r, p) => {\n  const {\n    children: e,\n    className: n,\n    loading: s,\n    ...m\n  } = f(r, P, d);\n  if (!s) return e;\n  const i = o.isValidElement(e) ? l : \"span\";\n  return o.createElement(i, {\n    ref: p,\n    \"aria-hidden\": !0,\n    className: a(\"rt-Skeleton\", n),\n    \"data-inline-skeleton\": o.isValidElement(e) ? void 0 : !0,\n    tabIndex: -1,\n    inert: \"\",\n    ...m\n  }, e);\n});\nt.displayName = \"Skeleton\";\nexport { t as Skeleton };","map":{"version":3,"names":["o","a","Slot","l","extractProps","f","marginPropDefs","d","skeletonPropDefs","P","t","forwardRef","r","p","children","e","className","n","loading","s","m","i","isValidElement","createElement","ref","tabIndex","inert","displayName","Skeleton"],"sources":["/Users/danielcross/bootcamp/mod-20/daniel-cross-portfolio/node_modules/@radix-ui/themes/src/components/skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { extractProps } from '../helpers/extract-props.js';\nimport { marginPropDefs } from '../props/margin.props.js';\nimport { skeletonPropDefs } from './skeleton.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\n\ntype SkeletonElement = React.ElementRef<'span'>;\ntype SkeletonOwnProps = GetPropDefTypes<typeof skeletonPropDefs>;\ninterface SkeletonProps\n  extends ComponentPropsWithout<'span', RemovedProps>,\n    MarginProps,\n    SkeletonOwnProps {}\nconst Skeleton = React.forwardRef<SkeletonElement, SkeletonProps>((props, forwardedRef) => {\n  const { children, className, loading, ...skeletonProps } = extractProps(\n    props,\n    skeletonPropDefs,\n    marginPropDefs\n  );\n\n  if (!loading) return children;\n\n  const Tag = React.isValidElement(children) ? Slot : 'span';\n\n  return (\n    <Tag\n      ref={forwardedRef}\n      aria-hidden\n      className={classNames('rt-Skeleton', className)}\n      data-inline-skeleton={React.isValidElement(children) ? undefined : true}\n      tabIndex={-1}\n      // Workaround to use `inert` until https://github.com/facebook/react/pull/24730 is merged.\n      {...{ inert: true ? '' : undefined }}\n      {...skeletonProps}\n    >\n      {children}\n    </Tag>\n  );\n});\nSkeleton.displayName = 'Skeleton';\n\nexport { Skeleton };\nexport type { SkeletonProps };\n"],"mappings":"AAAA,YAAYA,CAAA,MAAW;AACvB,OAAOC,CAAA,MAAgB;AACvB,SAASC,IAAA,IAAAC,CAAA,QAAY;AAErB,SAASC,YAAA,IAAAC,CAAA,QAAoB;AAC7B,SAASC,cAAA,IAAAC,CAAA,QAAsB;AAC/B,SAASC,gBAAA,IAAAC,CAAA,QAAwB;AAYjC,MAAMC,CAAA,GAAWV,CAAA,CAAMW,UAAA,CAA2C,CAACC,CAAA,EAAOC,CAAA,KAAiB;EACzF,MAAM;IAAEC,QAAA,EAAAC,CAAA;IAAUC,SAAA,EAAAC,CAAA;IAAWC,OAAA,EAAAC,CAAA;IAAS,GAAGC;EAAc,IAAIf,CAAA,CACzDO,CAAA,EACAH,CAAA,EACAF,CACF;EAEA,IAAI,CAACY,CAAA,EAAS,OAAOJ,CAAA;EAErB,MAAMM,CAAA,GAAMrB,CAAA,CAAMsB,cAAA,CAAeP,CAAQ,IAAIZ,CAAA,GAAO;EAEpD,OACEH,CAAA,CAAAuB,aAAA,CAACF,CAAA;IACCG,GAAA,EAAKX,CAAA;IACL,eAAW;IACXG,SAAA,EAAWf,CAAA,CAAW,eAAegB,CAAS;IAC9C,wBAAsBjB,CAAA,CAAMsB,cAAA,CAAeP,CAAQ,IAAI,SAAY;IACnEU,QAAA,EAAU;IAEJC,KAAA,EAAc;IACnB,GAAGN;EAAA,GAEHL,CACH,CAEJ;AAAA,CAAC;AACDL,CAAA,CAASiB,WAAA,GAAc;AAAA,SAAAjB,CAAA,IAAAkB,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}