{"ast":null,"code":"var _jsxFileName = \"/Users/danielcross/bootcamp/mod-20/daniel-cross-portfolio/src/pages/Contact.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport * as Form from \"@radix-ui/react-form\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contact() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(formData);\n    setFormData({\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    });\n  };\n  const handleChange = (e, field) => {\n    const fieldName = field.name;\n    const fieldValue = e.target.value;\n    setFormData({\n      ...formData,\n      [fieldName]: fieldValue\n    });\n    console.log(fieldName);\n    console.log(fieldValue);\n  };\n  const handleBlur = () => {\n    if (formData.name.trim() === \"\") {\n      console.log(\"no no!\");\n    }\n    console.log(\"left the field!\");\n  };\n  const validateEmpty = value => {\n    if (!value.trim()) {\n      return \"isEmpty\";\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"tEcucAowGL+c35yPpwmz+RFCWMw=\");\n_c = Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","Form","useState","jsxDEV","_jsxDEV","Contact","_s","formData","setFormData","name","email","message","handleSubmit","e","preventDefault","console","log","handleChange","field","fieldName","fieldValue","target","value","handleBlur","trim","validateEmpty","children","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","required","_c","$RefreshReg$"],"sources":["/Users/danielcross/bootcamp/mod-20/daniel-cross-portfolio/src/pages/Contact.jsx"],"sourcesContent":["import React from \"react\";\nimport * as Form from \"@radix-ui/react-form\";\nimport { useState } from \"react\";\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(formData);\n    setFormData({\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    });\n  };\n\n  const handleChange = (e, field) => {\n    const fieldName = field.name;\n    const fieldValue = e.target.value;\n    setFormData({\n      ...formData,\n      [fieldName]: fieldValue,\n    });\n    console.log(fieldName);\n    console.log(fieldValue);\n  };\n  const handleBlur = () => {\n    if (formData.name.trim() === \"\") {\n      console.log(\"no no!\");\n    }\n    console.log(\"left the field!\");\n  };\n  const validateEmpty = (value) => {\n    if (!value.trim()) {\n      return \"isEmpty\";\n    }\n    return null;\n  };\n  return (\n    <form>\n      <label for=\"name\">Name</label>\n      <input type=\"text\" id=\"name\" name=\"name\" required></input>\n      <input type=\"submit\" value=\"Submit\"></input>\n    </form>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,IAAI,MAAM,sBAAsB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;IACrBC,WAAW,CAAC;MACVC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,YAAY,GAAGA,CAACJ,CAAC,EAAEK,KAAK,KAAK;IACjC,MAAMC,SAAS,GAAGD,KAAK,CAACT,IAAI;IAC5B,MAAMW,UAAU,GAAGP,CAAC,CAACQ,MAAM,CAACC,KAAK;IACjCd,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACY,SAAS,GAAGC;IACf,CAAC,CAAC;IACFL,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;IACtBJ,OAAO,CAACC,GAAG,CAACI,UAAU,CAAC;EACzB,CAAC;EACD,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIhB,QAAQ,CAACE,IAAI,CAACe,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC/BT,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB;IACAD,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC;EACD,MAAMS,aAAa,GAAIH,KAAK,IAAK;IAC/B,IAAI,CAACA,KAAK,CAACE,IAAI,CAAC,CAAC,EAAE;MACjB,OAAO,SAAS;IAClB;IACA,OAAO,IAAI;EACb,CAAC;EACD,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAOuB,GAAG,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC9B3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,MAAM;MAACxB,IAAI,EAAC,MAAM;MAACyB,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1D3B,OAAA;MAAO4B,IAAI,EAAC,QAAQ;MAACV,KAAK,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEX;AAACzB,EAAA,CA7CuBD,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}